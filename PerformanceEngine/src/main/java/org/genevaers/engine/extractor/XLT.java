package org.genevaers.engine.extractor;

import java.io.FileWriter;
import java.nio.ByteBuffer;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import org.genevaers.engine.lookups.Join;
import org.genevaers.engine.lookups.JoinsRepo;
import org.genevaers.genevaio.ltfile.LTRecord;
import org.genevaers.genevaio.recordreader.FileRecord;
import org.genevaers.genevaio.recordreader.RecordFileWriter;
import org.genevaers.utilities.GersCodePage;

/**
 * This class was automatically generated by the GenevaERS Extract Generator.
 * 
 * DO NOT EDIT
 * 
 */

public class XLT extends Extract {

    public XLT() {
        inputDDnames.add("ENGIN");
    }

    public void processRecord(byte[] src, ByteBuffer target, RecordFileWriter outWriter, int numrecords) {

        // Output length 82
        target.put("Type::".getBytes());
        target.put(src, 0, 1);
        // Join 3443 -> 1 targ LF 10476 LR 10526
        Join jn = JoinsRepo.getJoin(1);
        // Record count used for do again
        FileRecord joinBuffer = jn.getBufferForRecord(numrecords);
        if (joinBuffer == null && jn.updateRequired()) { // may know not found...
            // LKE - make the key value
            jn.addToKey(src, 0, 1);
            // LUSM - update lookup buffer
            joinBuffer = jn.updateBuffer(); // not found case?
        }
        // DTL
        if (joinBuffer != null) {
            target.put(joinBuffer.bytes.array(), 1, 24);
        } else {
            // GOTO join default
            target.put("Not found               ".getBytes());
        }

        target.put("Demo2 Lead In__".getBytes());
        target.put(src, 1, 24);
        target.put(":".getBytes());
        target.put(src, 25, 2);
        target.put("_".getBytes());
        if (new String(src, 25, 2).equals("03")) {
            target.put("YIPPEE".getBytes());
            // GOTO join default
        } else {
            target.put("OH  NO".getBytes());
        }
        target.put(src, 27, 2);
        outWriter.getRecordToFill().bytes.position(82);
        outWriter.writeAndClearTheRecord();

        // ES - end of set
        // EN - end of extract
    }

    public int getOutputLen() {
        return 82;
    }

    public int getLrLen() {
        return 29;
    }

}
